spring.datasource.url=jdbc:postgresql://db:5432/app
spring.datasource.username=sungho
spring.datasource.password=0000

# Redis 설정 (Java 서비스용 DB 0, Python ML 서비스는 DB 1 사용)
spring.data.redis.host=redis
spring.data.redis.port=6379
spring.data.redis.database=0

spring.kafka.bootstrap-servers=kafka:9092
spring.kafka.consumer.group-id=es-sync
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-commit-interval=1000

spring.kafka.producer.acks=1
spring.kafka.producer.retries=3

spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.type.array.vector=com.vladmihalcea.hibernate.type.pgvector.PgVectorType

# \uB370\uC774\uD130\uBCA0\uC774\uC2A4 \uC5F0\uACB0 \uC124\uC815
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.initialization-fail-timeout=30000

# \uC7AC\uC2DC\uB3C4 \uC124\uC815
spring.jpa.properties.hibernate.connection.provider_disables_autocommit=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Docker \uD658\uACBD\uC758 \uC784\uBCA0\uB529 \uC11C\uBE44\uC2A4 \uC124\uC815
embedding.service.url=http://embedding-service:8000